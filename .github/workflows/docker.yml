name: Docker
'on':
  push:
    branches:
      - main
    tags:
      - v*.*.*
  pull_request:
    branches:
      - main
    permissions:
      contents: read
      packages: write
      id-token: write
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: '${{ github.repository }}'
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.9.1
        with:
          cosign-release: v2.5.2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.6.0
        with:
          platforms: 'linux/amd64,linux/arm64'
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1
      - name: 'Log into registry ${{ env.REGISTRY }}'
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.4.0
        with:
          registry: '${{ env.REGISTRY }}'
          username: '${{ github.actor }}'
          password: '${{ secrets.GITHUB_TOKEN }}'
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.7.0
        with:
          images: '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}'
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6.18.0
        with:
          context: .
          push: '${{ github.event_name != ''pull_request'' }}'
          tags: '${{ steps.meta.outputs.tags }}'
          labels: '${{ steps.meta.outputs.labels }}'
          cache-from: type=gha
          cache-to: 'type=gha,mode=max'
          platforms: 'linux/amd64,linux/arm64'
      - name: Sign the published Docker image
        if: '${{ github.event_name != ''pull_request'' }}'
        env:
          TAGS: '${{ steps.meta.outputs.tags }}'
          DIGEST: '${{ steps.build-and-push.outputs.digest }}'
        run: 'echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}'
